name: Publish GitHub Pages

on:
  workflow_run:
    workflows: ["Client-side Preprocessing"]
    types: [completed]

jobs:
  deploy:
    runs-on: ubuntu-latest
    needs: build-artifacts
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: write # To push build artifacts
      pages: write    # To deploy to GitHub Pages
      id-token: write # Required for actions/deploy-pages
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-files
          path: ./dist

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist' # Path to your build output directory

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  build-artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Download all workflow run artifacts
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: github.event.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "dist-files"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/dist.zip`, Buffer.from(download.data));

      - name: Unzip artifact
        run: unzip dist.zip -d dist
